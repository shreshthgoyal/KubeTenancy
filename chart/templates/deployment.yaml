apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kiosk.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "kiosk.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "kiosk.fullname" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "kiosk.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ template "kiosk.serviceAccountName" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      containers:
      - ports:
        - name: webhook
          containerPort: 9443
          protocol: TCP
        - name: apiservice
          containerPort: {{ .Values.apiservice.port }}
          protocol: TCP
        {{- if .Values.metrics.enabled }}
        - name: metrics
          containerPort: 8080
          protocol: TCP
        {{- end }}
        command:
        {{- range $f := .Values.kiosk.command }}
        - {{ $f | quote }}
        {{- end }}
        args:
        {{- range $f := .Values.kiosk.args }}
        - {{ $f | quote }}
        {{- end }}
        {{- if .Values.image }}
        image: "{{ .Values.image }}"
        {{- else }}
        image: "kiosksh/kiosk:{{ .Chart.Version }}"
        {{- end }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: kiosk
        env:
          {{- if .Values.webhook }}
          {{- if not .Values.webhook.create }}
          - name: UPDATE_WEBHOOK
            value: "false"
          {{- end }}
          {{- end }}
          {{- if .Values.apiservice }}
          {{- if not .Values.apiservice.create }}
          - name: UPDATE_APISERVICE
            value: "false"
          {{- end }}
          {{- end }}
          {{- range $key, $value := .Values.env }}
          - name: {{ $key | quote }}
            value: {{ $value | quote }}
          {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.apiservice.port }}
            scheme: HTTPS
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.apiservice.port }}
            scheme: HTTPS
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- end }}
        resources:
{{ toYaml .Values.kiosk.resources | indent 10 }}
